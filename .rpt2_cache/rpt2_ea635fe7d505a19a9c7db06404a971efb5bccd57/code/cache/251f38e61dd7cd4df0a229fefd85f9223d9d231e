{"map":"{\"version\":3,\"file\":\"text-input.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/text-input.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,oBAAoB,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAEnE,MAAM,OAAO,SAAU,SAAQ,eAAuB;IAMpD;QACE,KAAK,EAAE,CAAC;QAJA,WAAM,GAAG,IAAI,eAAe,CAAS,EAAE,CAAC,CAAC;QAMjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,IAAI,CAC1C,oBAAoB,EAAE,EACtB,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QAExB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;aACtB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC\"}","code":"import { AbstractControl } from './abstract-control';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { distinctUntilChanged, shareReplay } from 'rxjs/operators';\r\nexport class TextInput extends AbstractControl {\r\n    constructor() {\r\n        super();\r\n        this.value$ = new BehaviorSubject('');\r\n        this.value = this.value$.asObservable().pipe(distinctUntilChanged(), shareReplay(1));\r\n        const foundInput = this.querySelector('input');\r\n        if (!foundInput) {\r\n            throw new Error('<rx-text-input> not found child <input>');\r\n        }\r\n        this.input = foundInput;\r\n        this.name$.asObservable()\r\n            .subscribe(name => this.input.setAttribute('name', name));\r\n    }\r\n}\r\ncustomElements.define('rx-text-input', TextInput);\r\n//# sourceMappingURL=text-input.js.map","dts":{"name":"/home/pashok/projects/reactive-forms/.rpt2_cache/placeholder/text-input.d.ts","writeByteOrderMark":false,"text":"import { AbstractControl } from './abstract-control';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nexport declare class TextInput extends AbstractControl<string> {\r\n    value: Observable<string>;\r\n    protected value$: BehaviorSubject<string>;\r\n    private input;\r\n    constructor();\r\n}\r\n"}}
